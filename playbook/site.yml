---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.systemd:
        name: clickhouse-server
        state: restarted
    - name: Reload firewalld
      become: true
      ansible.builtin.systemd:
        name: firewalld
        state: restarted
  tasks:
    - block: 
      - name: Get clickhouse distrib
        #become: true
        ansible.builtin.get_url:
          url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
          dest: "files/{{ item }}-{{ clickhouse_version }}.rpm"
          mode: '0755'
        with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          #become: true
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "files/clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: '0755'
      delegate_to: localhost
      run_once: true
      tags:
        - "install clickhouse"
    - name: Create a directory clickhouse if it does not exist
      ansible.builtin.file:
        path: ./clickhouse
        state: directory
        mode: '0755'
      tags:
        - "install clickhouse"
    - name: Copy clickhouse packages
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: ./clickhouse/
        mode: '0755'
      with_items:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      tags:
        - "install clickhouse"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name: "{{ item }}"
      with_items:
          - "clickhouse/clickhouse-common-static-{{ clickhouse_version }}.rpm"
          - "clickhouse/clickhouse-client-{{ clickhouse_version }}.rpm"
          - "clickhouse/clickhouse-server-{{ clickhouse_version }}.rpm"
      notify: Start clickhouse service
      tags:
        - "install clickhouse"
    - name: Copy conf
      ansible.builtin.template:
        src: config.j2
        dest: /etc/clickhouse-server/config.xml
        backup: true
        mode: "0600"
      notify: Start clickhouse service
      tags:
        - "config clickhouse"
        - "install clickhouse"
    - name: Open port  clickhouse_http_port
      become: true
      vars:
        ansible_python_interpreter: /usr/bin/python
      ansible.posix.firewalld:
        port: "{{ clickhouse_http_port }}/tcp"
        permanent: true
        state: enabled
      notify: Reload firewalld
      tags:
        - "install clickhouse"
    - name: Start clickhouse service if need
      ansible.builtin.meta: flush_handlers
    - name: Create database
      become: true
      ansible.builtin.command: "clickhouse-client   -q 'CREATE DATABASE IF NOT EXISTS logs'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
      tags:
        - "db clickhouse"
        - "install clickhouse"
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q  'CREATE TABLE IF NOT EXISTS  logs.lastlog ( message String ) ENGINE = MergeTree() ORDER BY tuple();'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=82
      changed_when: create_table.rc == 0
      tags:
        - "db clickhouse"
        - "install clickhouse"
- name: Install Vector
  hosts: vector
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted
  tasks:
  - name: Download Vector
    #become: true
    ansible.builtin.get_url:
      url: "{{ vector_url }}"
      dest: files/vector-{{ vector_release }}-{{ vector_version }}.x86_64.rpm
      mode: '0755'
    delegate_to: localhost
    run_once: true
    tags:
      - "install vector"
  - name: Create a directory Vector if it does not exist
    ansible.builtin.file:
      path: ./vector
      state: directory
      mode: '0755'
    tags:
      - "install vector"
  - name: Copy Vector packages
    ansible.builtin.copy:
      src: vector-{{ vector_release }}-{{ vector_version }}.x86_64.rpm
      dest: ./vector/
      mode: '0755'
    tags:
      - "install vector"
  - name: Install vector packages
    become: true
    ansible.builtin.yum:
      name: ./vector/vector-{{ vector_release }}-{{ vector_version }}.x86_64.rpm
      state: present
    notify: Start vector service
    tags:
      - "install vector"
  - name: Copy config vector
    ansible.builtin.template:
      src: vector.j2
      dest: /etc/vector/vector.toml
      backup: true
      mode: '0755'
    notify: Start vector service
    tags:
      - "config vector"
      - "install vector"
